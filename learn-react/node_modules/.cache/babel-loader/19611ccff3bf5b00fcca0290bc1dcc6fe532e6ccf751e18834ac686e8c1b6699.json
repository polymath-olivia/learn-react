{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/LDYEONGHYE/learn-react/src/App.js\";\nimport { useReducer } from \"react\";\nimport Card from \"./Components/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // logic\n  console.log(\"App.js\");\n  const name = \"olivia\";\n  const age = 27;\n\n  // 안녕하세요. olivia님! 나이게 27세 이시네요.\n  // 환영합니다.\n\n  const greetingMessage = `안녕하세요. ${name}님! 나이가 ${age}세 이시네요. \\n환영합니다`;\n  console.log(greetingMessage);\n  const user = {\n    isLoggedIn: true,\n    role: \"admin\" //'guest' , 'user'\n  };\n\n  /**\n   * Logical operators\n   * 단축 평가 논리 계산법 */\n\n  // 사용자가 로그인 한 상태이면서, 역할이 'admin'인 경우에 \"관리자 페이지 접근 가능\" 아니면 \"관리자 페이지 접근 불가능\"\n  // 로그인 한 상태이면서, 동시에 admin권한을 가진 유저\n  if (!user.isLoggedIn || user.role !== \"admin\") {\n    console.log(\"관리자 페이지에 접근이 가능합니다.\");\n  } else {\n    console.log(\"관리자 페이지에 접근이 불가능합니다!!\");\n  }\n  const user2 = {\n    id: \"olivia\",\n    password: \"password\",\n    isLoggedIn: false\n  };\n\n  // if (user2.id === \"olivia\" && user2.password === \"password\") {\n  //   // 1차 조건 판별\n  //   user2.isLoggedIn = ture;\n  //   if (userInput) {\n  //     //사용자 입력값이 있는 경우\n  //   }\n  // }\n\n  // view\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hello world\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, this);\n  /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n}\n_c = App;\nexport default App;\n\n/// 2024.9.9 코드\n\nconst add = (a, b) => {\n  return a + b;\n};\n\n// 매개변수에 값을 주지 않은 경우\nconsole.log(\"add\", add(1));\n\n// ####### 구조 분해 할당 ########\n// 배열\nconst keys = [\"name\", \"age\"];\nconst [key1, key2] = keys;\nconsole.log(key1, key2);\n\n// 객체\nconst myuser = {\n  name: \"라해스\",\n  age: 2024\n};\nconst {\n  name: userName,\n  age: userAge\n} = myuser;\nconsole.log(\"userName\", userName, \"userAge\", userAge);\n\n// ##### spread syntax #######\n// 배열에서\nconst originalList = [1, 2, 3];\nconst newList = [...originalList, 4, 5];\nnewList.push(6);\nconsole.log(originalList, newList);\n\n// 객체에서\nconst originalObj = {\n  name: \"라해스\",\n  age: 2024\n};\nconst newObj = {\n  ...originalObj,\n  age: 2025\n};\nconsole.log(originalObj, newObj);\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useReducer","Card","jsxDEV","_jsxDEV","App","console","log","name","age","greetingMessage","user","isLoggedIn","role","user2","id","password","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","add","a","b","keys","key1","key2","myuser","userName","userAge","originalList","newList","push","originalObj","newObj","$RefreshReg$"],"sources":["/Users/mac/Desktop/LDYEONGHYE/learn-react/src/App.js"],"sourcesContent":["import { useReducer } from \"react\";\nimport Card from \"./Components/Card\";\n\nfunction App() {\n  // logic\n  console.log(\"App.js\");\n\n  const name = \"olivia\";\n  const age = 27;\n\n  // 안녕하세요. olivia님! 나이게 27세 이시네요.\n  // 환영합니다.\n\n  const greetingMessage = `안녕하세요. ${name}님! 나이가 ${age}세 이시네요. \\n환영합니다`;\n  console.log(greetingMessage);\n\n  const user = {\n    isLoggedIn: true,\n    role: \"admin\", //'guest' , 'user'\n  };\n\n  /**\n   * Logical operators\n   * 단축 평가 논리 계산법 */\n\n  // 사용자가 로그인 한 상태이면서, 역할이 'admin'인 경우에 \"관리자 페이지 접근 가능\" 아니면 \"관리자 페이지 접근 불가능\"\n  // 로그인 한 상태이면서, 동시에 admin권한을 가진 유저\n  if (!user.isLoggedIn || user.role !== \"admin\") {\n    console.log(\"관리자 페이지에 접근이 가능합니다.\");\n  } else {\n    console.log(\"관리자 페이지에 접근이 불가능합니다!!\");\n  }\n\n  const user2 = {\n    id: \"olivia\",\n    password: \"password\",\n    isLoggedIn: false,\n  };\n\n  // if (user2.id === \"olivia\" && user2.password === \"password\") {\n  //   // 1차 조건 판별\n  //   user2.isLoggedIn = ture;\n  //   if (userInput) {\n  //     //사용자 입력값이 있는 경우\n  //   }\n  // }\n\n  // view\n  return <div>hello world</div>;\n  <Card />;\n}\n\nexport default App;\n\n/// 2024.9.9 코드\n\nconst add = (a, b) => {\n  return a + b;\n};\n\n// 매개변수에 값을 주지 않은 경우\nconsole.log(\"add\", add(1));\n\n// ####### 구조 분해 할당 ########\n// 배열\nconst keys = [\"name\", \"age\"];\nconst [key1, key2] = keys;\nconsole.log(key1, key2);\n\n// 객체\nconst myuser = { name: \"라해스\", age: 2024 };\nconst { name: userName, age: userAge } = myuser;\n\nconsole.log(\"userName\", userName, \"userAge\", userAge);\n\n// ##### spread syntax #######\n// 배열에서\nconst originalList = [1, 2, 3];\nconst newList = [...originalList, 4, 5];\nnewList.push(6);\nconsole.log(originalList, newList);\n\n// 객체에서\nconst originalObj = { name: \"라해스\", age: 2024 };\nconst newObj = { ...originalObj, age: 2025 };\nconsole.log(originalObj, newObj);\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,GAAGA,CAAA,EAAG;EACb;EACAC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EAErB,MAAMC,IAAI,GAAG,QAAQ;EACrB,MAAMC,GAAG,GAAG,EAAE;;EAEd;EACA;;EAEA,MAAMC,eAAe,GAAG,UAAUF,IAAI,UAAUC,GAAG,iBAAiB;EACpEH,OAAO,CAACC,GAAG,CAACG,eAAe,CAAC;EAE5B,MAAMC,IAAI,GAAG;IACXC,UAAU,EAAE,IAAI;IAChBC,IAAI,EAAE,OAAO,CAAE;EACjB,CAAC;;EAED;AACF;AACA;;EAEE;EACA;EACA,IAAI,CAACF,IAAI,CAACC,UAAU,IAAID,IAAI,CAACE,IAAI,KAAK,OAAO,EAAE;IAC7CP,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EACpC,CAAC,MAAM;IACLD,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACtC;EAEA,MAAMO,KAAK,GAAG;IACZC,EAAE,EAAE,QAAQ;IACZC,QAAQ,EAAE,UAAU;IACpBJ,UAAU,EAAE;EACd,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,oBAAOR,OAAA;IAAAa,QAAA,EAAK;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC7B,aAAAjB,OAAA,CAACF,IAAI;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACV;AAACC,EAAA,GA/CQjB,GAAG;AAiDZ,eAAeA,GAAG;;AAElB;;AAEA,MAAMkB,GAAG,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;EACpB,OAAOD,CAAC,GAAGC,CAAC;AACd,CAAC;;AAED;AACAnB,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEgB,GAAG,CAAC,CAAC,CAAC,CAAC;;AAE1B;AACA;AACA,MAAMG,IAAI,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC;AAC5B,MAAM,CAACC,IAAI,EAAEC,IAAI,CAAC,GAAGF,IAAI;AACzBpB,OAAO,CAACC,GAAG,CAACoB,IAAI,EAAEC,IAAI,CAAC;;AAEvB;AACA,MAAMC,MAAM,GAAG;EAAErB,IAAI,EAAE,KAAK;EAAEC,GAAG,EAAE;AAAK,CAAC;AACzC,MAAM;EAAED,IAAI,EAAEsB,QAAQ;EAAErB,GAAG,EAAEsB;AAAQ,CAAC,GAAGF,MAAM;AAE/CvB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEuB,QAAQ,EAAE,SAAS,EAAEC,OAAO,CAAC;;AAErD;AACA;AACA,MAAMC,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC9B,MAAMC,OAAO,GAAG,CAAC,GAAGD,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC;AACvCC,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;AACf5B,OAAO,CAACC,GAAG,CAACyB,YAAY,EAAEC,OAAO,CAAC;;AAElC;AACA,MAAME,WAAW,GAAG;EAAE3B,IAAI,EAAE,KAAK;EAAEC,GAAG,EAAE;AAAK,CAAC;AAC9C,MAAM2B,MAAM,GAAG;EAAE,GAAGD,WAAW;EAAE1B,GAAG,EAAE;AAAK,CAAC;AAC5CH,OAAO,CAACC,GAAG,CAAC4B,WAAW,EAAEC,MAAM,CAAC;AAAC,IAAAd,EAAA;AAAAe,YAAA,CAAAf,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}